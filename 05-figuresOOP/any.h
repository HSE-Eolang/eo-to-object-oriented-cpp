#ifndef __any__
#define __any__

#include <iostream>

//------------------------------------------------------------------------------
// Структура, формирующая родительский класс,
// подключаемый ко всем дочерним классам
struct EO_any {
    // Виртуальный метод, реализующий вычисление внутри объекта
    virtual EO_any* eval() = 0;
    // Виртуальный метод, обеспечивающий установку аргументов
    // Технически это должен быть чистый метод для переопределения 
    // во всех классах. Но пока делаю его с пустым телом, чтобы переопределить
    // Только в демонстрационных точках.
    // Возвращает true в случае инициализации атрибута и 
    // false в случае неудачи. Но может при необходимости вызвать прерывание
    // или завершить работу программы.
    virtual bool set(EO_any* arg, int index) { return true; }

    // получение имени объекта (пока для тестирования)
    virtual const char* getTypeName() = 0;
    // вывод тестовой информации об объекте
    virtual void testOut() {
        std::cout << "Name is: " << getTypeName()
                  << "\n";
    }
    
};

#endif // __any__
